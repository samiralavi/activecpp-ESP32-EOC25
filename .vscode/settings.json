{
    "notebook.formatOnSave.enabled": true,
    "notebook.codeActionsOnSave": {
        "notebook.source.fixAll": "explicit",
        "notebook.source.organizeImports": "explicit"
    },
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.rulers": [
            100
        ],
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll": "explicit"
        }
    },
    "python.defaultInterpreterPath": "/usr/bin/python3",
    "python.analysis.typeCheckingMode": "basic",
    "cSpell.language": "en-GB",
    "python.testing.pytestArgs": [
        "tests"
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true,
    "C_Cpp.clang_format_fallbackStyle": "LLVM",
    "cSpell.diagnosticLevel": "Hint",
    "editor.detectIndentation": false,
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "C_Cpp.default.cppStandard": "c++17",
    "C_Cpp.default.cStandard": "c17",
    "C_Cpp.codeAnalysis.clangTidy.path": "/usr/bin/clang-tidy-14",
    "cmake.ctest.parallelJobs": 1,
    "editor.formatOnSave": true,
    "files.associations": {
        "freertos.h": "c",
        "freertosconfig.h": "c",
        "event_groups.h": "c",
        "esp_event.h": "c",
        "scheme_ble.h": "c",
        "scheme_softap.h": "c",
        "stdio.h": "c",
        "string.h": "c",
        "freertosconfig_arch.h": "c",
        "xtensa_config.h": "c",
        "xtensa_context.h": "c",
        "xtruntime-frames.h": "c",
        "thread": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "charconv": "cpp",
        "chrono": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "list": "cpp",
        "map": "cpp",
        "set": "cpp",
        "string": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "regex": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "format": "cpp",
        "future": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numbers": "cpp",
        "ostream": "cpp",
        "semaphore": "cpp",
        "span": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "stop_token": "cpp",
        "streambuf": "cpp",
        "cinttypes": "cpp",
        "typeinfo": "cpp",
        "variant": "cpp",
        "wifi_provisioning_priv.h": "c",
        "blufi_c.h": "c",
        "nimble_port_freertos.h": "c",
        "esp_blufi_api.h": "c",
        "console.h": "c",
        "ble_svc_gatt.h": "c",
        "wifi_config.h": "c",
        "wifi_ctrl.h": "c",
        "protocomm.h": "c",
        "protocomm_ble.h": "c",
        "esp_bt.h": "c",
        "protocomm_httpd.h": "c",
        "manager.h": "c",
        "any": "cpp",
        "codecvt": "cpp",
        "forward_list": "cpp",
        "source_location": "cpp",
        "fstream": "cpp",
        "ranges": "cpp",
        "valarray": "cpp",
        "complex": "cpp",
        "expected": "cpp"
    },
    "cmake.configureOnOpen": false,
    "files.insertFinalNewline": true,
    "search.exclude": {
        "components": true
    },
}
